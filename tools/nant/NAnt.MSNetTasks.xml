<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NAnt.MSNetTasks</name>
    </assembly>
    <members>
        <member name="T:NAnt.MSNet.Tasks.IldasmTask">
            <summary>
            Disassembles any portable executable (PE) file that contains
            intermediate language (IL) code.
            </summary>
            <remarks>
              <para>
              Files are only disassembled if the input file is newer than the output
              file, or if the output file does not exist.  However, you can 
              explicitly force files to be disassembled with the 
              <see cref="P:NAnt.MSNet.Tasks.IldasmTask.ForceRebuild"/> attribute.
              </para>
              <para>
              A <see cref="T:NAnt.Core.Types.FileSet"/> can be used to select files to disassemble. 
              To use a <see cref="T:NAnt.Core.Types.FileSet"/>, the <see cref="P:NAnt.MSNet.Tasks.IldasmTask.ToDirectory"/> 
              attribute must be set. The file name of the output file will be equal 
              to the file name of the input file, but with extension ".il".
              </para>
            </remarks>
            <example>
              <para>
              Disassembles <c>helloworld.exe</c> to <c>helloworld.il</c>.
              </para>
              <code>
                <![CDATA[
            <ildasm input="helloworld.exe" output="helloworld.il" />
                ]]>
              </code>
            </example>
            <example>
              <para>
              Disassembles a set of PE files into the specified directory.
              </para>
              <code>
                <![CDATA[
            <ildasm todir=".">
                <assemblies>
                    <include name="*.exe" />
                    <include name="*.dll" />
                </assemblies>
            </ildasm>
                ]]>
              </code>
            </example>
        </member>
        <member name="M:NAnt.MSNet.Tasks.IldasmTask.Initialize">
            <summary>
            Checks whether the task is initialized with valid attributes.
            </summary>
        </member>
        <member name="M:NAnt.MSNet.Tasks.IldasmTask.ExecuteTask">
            <summary>
            Disassembles the PE file(s).
            </summary>
        </member>
        <member name="M:NAnt.MSNet.Tasks.IldasmTask.DisassemblyFile(System.IO.FileInfo)">
            <summary>
            Disassembles the specified PE file.
            </summary>
            <param name="inputFile">The PE file to disassemble.</param>
        </member>
        <member name="M:NAnt.MSNet.Tasks.IldasmTask.GetOutputFile(System.IO.FileInfo)">
            <summary>
            Determines the full path and extension for the output file.
            </summary>
            <param name="inputFile">
            A <see cref="T:System.IO.FileInfo"/> that represents the PE file
            file for which the corresponding output file should be determined.
            </param>
            <returns>
            A <see cref="T:System.IO.FileInfo"/> that represents the full path
            for the output file.
            </returns>
            <exception cref="T:NAnt.Core.BuildException">The path of the output file could not be determined.</exception>
        </member>
        <member name="M:NAnt.MSNet.Tasks.IldasmTask.WriteOptions(System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            Writes the disassembler options.
            </summary>
        </member>
        <member name="M:NAnt.MSNet.Tasks.IldasmTask.WriteOption(System.IO.StringWriter,System.String)">
             <summary>
             Writes an option using the default output format.
             </summary>
             <param name="writer">
             The <see cref="T:System.IO.StringWriter"/> to which the disassembler options
             should be written.
            </param>
             <param name="name">
             A <see cref="T:System.String"/> that contains the name of the
             option which should be passed to the disassembler.
             </param>
        </member>
        <member name="M:NAnt.MSNet.Tasks.IldasmTask.WriteOption(System.IO.StringWriter,System.String,System.String)">
            <summary>
            Writes an option and its value using the default output format.
            </summary>
            <param name="writer">
            The <see cref="T:System.IO.StringWriter"/> to which the disassembler options
            should be written.
            </param>
            <param name="name">
            A <see cref="T:System.String"/> that contains the name of the
            option which should be passed to the disassembler.
            </param>
            <param name="arg">
            A <see cref="T:System.String"/> that contains the value of the
            option which should be passed to the disassembler.
            </param>
        </member>
        <member name="M:NAnt.MSNet.Tasks.IldasmTask.NeedsDisassembling(System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            Determines whether or not disassembling is needed.
            </summary>
            <returns>
            <see langword="true" /> if disassembling is needed; otherwise,
            <see langword="false" />.
            </returns>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.All">
            <summary>
            Specifies whether or not the disassembler should combine the
            <c>/HEADER</c>, <c>/BYTE</c>, and <c>/TOKENS</c> options. The default 
            is <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if the disassembler should combine the
            <c>/HEADER</c>, <c>/BYTE</c>, and <c>/TOKENS</c> options;
            otherwise, <see langword="false" />. The default is
            <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/ALL</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Bytes">
            <summary>
            Specifies whether or not the disassembler should generate the
            IL stream bytes (in hexadecimal notation) as instruction comments.
            The default is <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if the IL stream bytes should be generated
            as instruction comments; otherwise, <see langword="false" />. The
            default is <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/BYTE</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.ForceRebuild">
            <summary>
            Instructs NAnt to rebuild the output file regardless of the file
            timestamps. The default is <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if the output file should be rebuilt
            regardless of its timestamps; otherwise <see langword="false" />.
            The default is <see langword="false" />.
            </value>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Header">
            <summary>
            Specifies whether or not the disassembler should include PE header
            information and runtime header information in the output. The default 
            is <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if PE header information and runtime header
            information should be included in the output; otherwise,
            <see langword="false" />. The default is <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/HEADER</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.InputFile">
            <summary>
            Specifies the PE file to disassemble.
            </summary>
            <value>
            A <see cref="T:System.IO.FileInfo"/> that represents the PE file
            to disassemble.
            </value>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.LineNumbers">
            <summary>
            Specifies whether or not the disassembler should include
            references to original source lines. The default is <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if references to original source lines
            should be included; otherwise, <see langword="false" />. The
            default is <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/LINENUM</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.NoIL">
            <summary>
            Specifies whether or not the disassembler should suppress ILASM
            code output. The default is <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if ILASM code output should be suppresses;
            otherwise, <see langword="false" />. The default is
            <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/NOIL</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.PublicOnly">
            <summary>
            Specifies whether or not the disassembler should disassemble
            public items only. This is a shortcut for <see cref="P:NAnt.MSNet.Tasks.IldasmTask.Visibility"/>="pub".
            The default is <see langword="false"/>.
            </summary>
            <value>
            <see langword="true"/> if only public items should be
            disassembled; otherwise, <see langword="false"/>. The default is
            <see langword="false"/>.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/PUBONLY</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.QuoteAllNames">
            <summary>
            Specifies whether or not the disassembler should enclose all names
            in single quotation marks. By default, only names that don't match
            the ILASM definition of a simple name are quoted. The default is 
            <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if all names should be enclosed in single
            quotation marks; otherwise, <see langword="false" />. The default
            is <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/QUOTEALLNAMES</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.RawExceptionHandling">
            <summary>
            Specifies whether or not the disassembler should generate
            structured exception handling clauses in canonical (label) form.
            The default is <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if structured exception handling clauses
            should be generated in canonical form; otherwise,
            <see langword="false" />. The default is <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/RAWEH</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Source">
            <summary>
            Specifies whether or not the disassembler should generate
            original source lines as comments. The default is <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if original source lines should be
            generated as comments; otherwise, <see langword="false" />.
            The default is <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/SOURCE</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Tokens">
            <summary>
            Specifies whether or not the disassembler should generate metadata
            token values as comments. The default is <see langword="false" />.
            </summary>
            <value>
            <see langword="true" /> if metadata token values should be
            generated as comments; otherwise, <see langword="false" />. The
            default is <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/TOKENS</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Unicode">
            <summary>
            Specifies whether or not the disassembler should use the UNICODE
            encoding when generating the output. The default is ANSI.
            </summary>
            <value>
            <see langword="true" /> if the output should be generated using
            the UNICODE encoding; otherwise, <see langword="false" />. The
            default is <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/UNICODE</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Utf8">
            <summary>
            Specifies whether or not the disassembler should use the UTF-8
            encoding when generating the output. The default is ANSI.
            </summary>
            <value>
            <see langword="true" /> if the output should be generated using
            the UTF-8 encoding; otherwise, <see langword="false" />. The
            default is <see langword="false" />.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/UTF8</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Item">
            <summary>
            Instructs the disassembler to disassemble the specified item only.
            </summary>
            <value>
            A <see cref="T:System.String"/> that specifies the item to
            disassemble.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/ITEM</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Visibility">
            <summary>
            Instructs the disassembler to disassemble only the items with the
            specified visibility. Possible values are <c>PUB</c>, <c>PRI</c>,
            <c>FAM</c>, <c>ASM</c>, <c>FAA</c>, <c>FOA</c>, <c>PSC</c>,
            or any combination of them separated by <c>+</c>.
            </summary>
            <value>
            A <see cref="T:System.String"/> that contains the visibility
            suboptions.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/VISIBILITY</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.OutputFile">
            <summary>
            Specifies the name of the output file created by the disassembler.
            </summary>
            <value>
            A <see cref="T:System.IO.FileInfo"/> that represents the name of
            the output file.
            </value>
            <remarks>
            <para>
            Corresponds to the <c>/OUT</c> flag.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.ToDirectory">
            <summary>
            Specifies the directory to which outputs will be stored.
            </summary>
            <value>
            A <see cref="T:System.IO.DirectoryInfo"/> that represents the
            directory to which outputs will be stored.
            </value>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Assemblies">
            <summary>
            Specifies a list of PE files to disassemble. To use a <see cref="T:NAnt.Core.Types.FileSet"/>, 
            the <see cref="P:NAnt.MSNet.Tasks.IldasmTask.ToDirectory"/> attribute must be specified.
            </summary>
            <value>
            A <see cref="T:NAnt.Core.Types.FileSet"/> that represents the set
            of PE files to disassemble.
            </value>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.Arguments">
            <summary>
            The command-line arguments for the external program.
            </summary>
            <remarks>
            Overridden to ensure the &lt;arg&gt; elements would not be exposed
            to build authors.
            </remarks>
        </member>
        <member name="P:NAnt.MSNet.Tasks.IldasmTask.ProgramArguments">
            <summary>
            Gets the command-line arguments for the external program.
            </summary>
            <value>
            A <see cref="T:System.String"/> that contains the command-line
            arguments for the external program.
            </value>
        </member>
        <member name="T:NAnt.MSNet.Tasks.ServiceControllerTask">
            <summary>
            Allows a Windows service to be controlled.
            </summary>
            <example>
              <para>Starts the World Wide Web Publishing Service on the local computer.</para>
              <code>
                <![CDATA[
            <servicecontroller action="Start" service="w3svc" />
                ]]>
              </code>
            </example>
            <example>
              <para>Stops the Alerter service on computer 'MOTHER'.</para>
              <code>
                <![CDATA[
            <servicecontroller action="Stop" service="Alerter" machine="MOTHER" />
                ]]>
              </code>
            </example>
        </member>
        <member name="M:NAnt.MSNet.Tasks.ServiceControllerTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.MSNet.Tasks.ServiceControllerTask"/>
            class.
            </summary>
        </member>
        <member name="M:NAnt.MSNet.Tasks.ServiceControllerTask.ExecuteTask">
            <summary>
            Peforms actions on the service in order to reach the desired status.
            </summary>
        </member>
        <member name="M:NAnt.MSNet.Tasks.ServiceControllerTask.DetermineDesiredStatus">
            <summary>
            Determines the desired status of the service based on the action
            that should be performed on it.
            </summary>
            <returns>
            The <see cref="T:System.ServiceProcess.ServiceControllerStatus"/> that should be reached
            in order for the <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.Action"/> to be considered successful.
            </returns>
        </member>
        <member name="M:NAnt.MSNet.Tasks.ServiceControllerTask.StartService(System.ServiceProcess.ServiceController)">
            <summary>
            Starts the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and
            <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.
            </summary>
            <param name="serviceController"><see cref="T:System.ServiceProcess.ServiceController"/> instance for controlling the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.</param>
        </member>
        <member name="M:NAnt.MSNet.Tasks.ServiceControllerTask.StopService(System.ServiceProcess.ServiceController)">
            <summary>
            Stops the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and
            <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.
            </summary>
            <param name="serviceController"><see cref="T:System.ServiceProcess.ServiceController"/> instance for controlling the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.</param>
        </member>
        <member name="M:NAnt.MSNet.Tasks.ServiceControllerTask.RestartService(System.ServiceProcess.ServiceController)">
            <summary>
            Restarts the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and
            <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.
            </summary>
            <param name="serviceController"><see cref="T:System.ServiceProcess.ServiceController"/> instance for controlling the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.</param>
        </member>
        <member name="M:NAnt.MSNet.Tasks.ServiceControllerTask.PauseService(System.ServiceProcess.ServiceController)">
            <summary>
            Pauses the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and
            <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.
            </summary>
            <param name="serviceController"><see cref="T:System.ServiceProcess.ServiceController"/> instance for controlling the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.</param>
        </member>
        <member name="M:NAnt.MSNet.Tasks.ServiceControllerTask.ContinueService(System.ServiceProcess.ServiceController)">
            <summary>
            Continues the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and
            <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.
            </summary>
            <param name="serviceController"><see cref="T:System.ServiceProcess.ServiceController"/> instance for controlling the service identified by <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName"/> and <see cref="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName"/>.</param>
        </member>
        <member name="F:NAnt.MSNet.Tasks.ServiceControllerTask._serviceName">
            <summary>
            Holds the name of the service that should be controlled.
            </summary>
        </member>
        <member name="F:NAnt.MSNet.Tasks.ServiceControllerTask._machineName">
            <summary>
            Holds the name of the computer on which the service resides.
            </summary>
        </member>
        <member name="F:NAnt.MSNet.Tasks.ServiceControllerTask._action">
            <summary>
            Holds the action that should be performed on the service.
            </summary>
        </member>
        <member name="F:NAnt.MSNet.Tasks.ServiceControllerTask._timeout">
            <summary>
            Holds the time, in milliseconds, the task will wait for a service
            to reach the desired status.
            </summary>
        </member>
        <member name="P:NAnt.MSNet.Tasks.ServiceControllerTask.ServiceName">
            <summary>
            The name of the service that should be controlled.
            </summary>
        </member>
        <member name="P:NAnt.MSNet.Tasks.ServiceControllerTask.MachineName">
            <summary>
            The name of the computer on which the service resides. The default
            is the local computer.
            </summary>
        </member>
        <member name="P:NAnt.MSNet.Tasks.ServiceControllerTask.Action">
            <summary>
            The action that should be performed on the service.
            </summary>
        </member>
        <member name="P:NAnt.MSNet.Tasks.ServiceControllerTask.Timeout">
            <summary>
            The time, in milliseconds, the task will wait for the service to
            reach the desired status. The default is 5000 milliseconds.
            </summary>
        </member>
        <member name="T:NAnt.MSNet.Tasks.ServiceControllerTask.ActionType">
            <summary>
            Defines the actions that can be performed on a service.
            </summary>
        </member>
        <member name="F:NAnt.MSNet.Tasks.ServiceControllerTask.ActionType.Start">
            <summary>
            Starts a service.
            </summary>
        </member>
        <member name="F:NAnt.MSNet.Tasks.ServiceControllerTask.ActionType.Stop">
            <summary>
            Stops a service.
            </summary>
        </member>
        <member name="F:NAnt.MSNet.Tasks.ServiceControllerTask.ActionType.Restart">
            <summary>
            Restarts a service.
            </summary>
        </member>
        <member name="F:NAnt.MSNet.Tasks.ServiceControllerTask.ActionType.Pause">
            <summary>
            Pauses a running service.
            </summary>
        </member>
        <member name="F:NAnt.MSNet.Tasks.ServiceControllerTask.ActionType.Continue">
            <summary>
            Continues a paused service.
            </summary>
        </member>
    </members>
</doc>
