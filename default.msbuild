<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Paths to various parts of the build -->
  <PropertyGroup>
    <pathbase>$(MSBuildProjectDirectory)</pathbase>
    <productname>fluentmigrator</productname>
    <builddir>build</builddir>
    <buildlibs>$(pathbase)\tools\MSBuild</buildlibs>
    <sourcedir>$(pathbase)\src</sourcedir>
    <dirsample>$(MSBuildProjectDirectory)\src\FluentMigrator.Example</dirsample>
    <pathdist>dist</pathdist>
    <buildplatform>net-3.5</buildplatform>
    <buildconfig>release</buildconfig>
    <majorversion>1</majorversion>
    <minorversion>0</minorversion>
  </PropertyGroup>
  
  <PropertyGroup>
    <Configuration Condition="$(Configuration)==''">Release</Configuration>
    <Platform>Any CPU</Platform>
  </PropertyGroup>
  
  <!-- Deletes the output folders for a clean build -->
  <Target Name="_Clean" Condition="Exists($(builddir))">
    <Message Text="Removing old build Files" />
    <RemoveDir Directories="$(builddir)"  />
  </Target>
  
  <!-- Update Assembly Version Files -->
  <UsingTask TaskName="MSBuild.ExtensionPack.Framework.AssemblyInfo" AssemblyFile="$(buildlibs)\MSBuild.ExtensionPack.dll"/>
  <Target Name="_VersionUpdate" DependsOnTargets="_Clean">
    <ItemGroup>
      <AssemblyInfoFiles Include="$(sourcedir)\SolutionInfo.cs" />
    </ItemGroup>
    <!--
            AssemblyBuildNumberFormat=""
            AssemblyRevisionType="$(AssemblyRevisionType)"
            AssemblyRevisionFormat="$(AssemblyRevisionFormat)"   

            AssemblyFileBuildNumberFormat="YYMM"
            AssemblyFileRevisionType="$(AssemblyFileRevisionType)"
            AssemblyFileRevisionFormat="$(AssemblyFileRevisionFormat)"  
      -->
    <MSBuild.ExtensionPack.Framework.AssemblyInfo AssemblyInfoFiles="@(AssemblyInfoFiles)"
          
          AssemblyMajorVersion="$(majorversion)"
          AssemblyMinorVersion="$(minorversion)"
          AssemblyBuildNumberType="Julian"
          AssemblyRevisionType="NoIncrement"
          AssemblyRevision="$(RevisionNumber)"
 
                                                  
          AssemblyFileMajorVersion="$(majorversion)"
          AssemblyFileMinorVersion="$(minorversion)"
          AssemblyFileBuildNumberType="Julian"
          AssemblyFileRevisionType="NoIncrement"
          AssemblyFileRevision="$(RevisionNumber)"                                        >
      <Output TaskParameter="MaxAssemblyVersion" PropertyName="MaxAssemblyVersion"/>
    </MSBuild.ExtensionPack.Framework.AssemblyInfo>
  </Target>

  <!-- Build for running the tests -->
  <Target Name="Build" DependsOnTargets="_VersionUpdate">
    <ItemGroup>
      <ProjectReferences Include="$(MSBuildProjectDirectory)\*.sln" />
    </ItemGroup>

    <MSBuild Projects="@(ProjectReferences)" Properties="Configuration=Debug;Platform=$(Platform);" />
  </Target>
  
  <!-- Clean the build and then Rebuild for release -->

  <Target Name="_Build" DependsOnTargets="_Clean">
    <ItemGroup>
      <ProjectReferences Include="$(MSBuildProjectDirectory)\*.sln" />
    </ItemGroup>

    <MSBuild Projects="@(ProjectReferences)" Properties="Configuration=$(Configuration);Platform=$(Platform);" />
  </Target>
  
  <!-- Package the binaries -->
  <!--
  
  <target name="package-bin">
    <mkdir dir="${path.dist}" if="${not(directory::exists(path.dist))}"/>
    <zip zipfile="${path.dist}\${product.name}-${major.version}-${build.config}-${build.platform}.zip" ziplevel="9">
      <fileset basedir="${dir.bin}">
        <include name="**/*.*"/>
      </fileset>
    </zip>
  </target>

  <target name="package-source">
    <mkdir dir="${path.dist}" if="${not(directory::exists(path.dist))}"/>
    <zip zipfile="${path.dist}\${product.name}-${major.version}-source.zip" ziplevel="9">
      <fileset basedir="${path.base}">
        <include name="lib/*.*"/>
        <include name="**/*.cs"/>
        <include name="**/*.csproj"/>
        <include name="**/*.sln"/>
        <include name="**/*.txt"/>
        <include name="**/*.build"/>
        <include name="**/*.include"/>
        <include name="**/*.snk"/>
      </fileset>
    </zip>
  </target>

  <target name="package-sample">
    <mkdir dir="${path.dist}" if="${not(directory::exists(path.dist))}"/>
    <zip zipfile="${path.dist}\${product.name}-${major.version}-sample.zip" ziplevel="9">
      <fileset basedir="${dir.sample}">
        <include name="**/*.*"/>
      </fileset>
    </zip>
  </target>
  -->
</Project>
